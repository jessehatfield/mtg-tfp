Script started on 2020-03-09 08:09:38-04:00
]777;notify;Command completed;./matches.py -r 2020-02/card_records.csv -c 5 -n 20000 -b 1000 -i 1 -o 2020-02/prebr/cards -p 2020-02/prebr/cards]0;jhatfiel@centos:~/src/mtg-tfp]7;file://centos/home/jhatfiel/src/mtg-tfp(base) [jhatfiel@centos mtg-tfp]$ ./matches.py -l 2020-02/combined_league.csv -r 2020-02/mtgo_records.csv -m 2020-02/gp_bologna_matchups.csv -s 2020-02/substitutions.csv -d Breach -n 25000 -b 5000 -c 8 -i 2 -o 2020-02/prebr/singleton-breacch
/home/jhatfiel/miniconda3/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:516: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint8 = np.dtype([("qint8", np.int8, 1)])
/home/jhatfiel/miniconda3/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:517: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_quint8 = np.dtype([("quint8", np.uint8, 1)])
/home/jhatfiel/miniconda3/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:518: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint16 = np.dtype([("qint16", np.int16, 1)])
/home/jhatfiel/miniconda3/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:519: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_quint16 = np.dtype([("quint16", np.uint16, 1)])
/home/jhatfiel/miniconda3/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:520: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint32 = np.dtype([("qint32", np.int32, 1)])
/home/jhatfiel/miniconda3/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:525: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  np_resource = np.dtype([("resource", np.ubyte, 1)])
/home/jhatfiel/miniconda3/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:541: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint8 = np.dtype([("qint8", np.int8, 1)])
/home/jhatfiel/miniconda3/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:542: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_quint8 = np.dtype([("quint8", np.uint8, 1)])
/home/jhatfiel/miniconda3/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:543: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint16 = np.dtype([("qint16", np.int16, 1)])
/home/jhatfiel/miniconda3/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:544: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_quint16 = np.dtype([("quint16", np.uint16, 1)])
/home/jhatfiel/miniconda3/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:545: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint32 = np.dtype([("qint32", np.int32, 1)])
/home/jhatfiel/miniconda3/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:550: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  np_resource = np.dtype([("resource", np.ubyte, 1)])
['Delver', 'Breach', 'Control', 'Cloudpost', 'Show and Tell', 'Storm', 'Chalice Stompy', 'Death and Taxes', 'Reanimator', 'Elves', '4C Loam', 'Lands', "Death's Shadow", 'Maverick', 'Mono-Red Prison', 'Hogaak', 'Depths', 'Dredge', 'Infect', 'Esper Hatebears', 'Goblins', 'BUG Zenith Oko', 'BUG Doomsday', 'Stryfo Pile', 'Painter', 'Urza ThopterSword', 'Burn', 'BUG', 'Belcher', 'Turbo Depths', 'BUG Control', 'Humans', 'Jund', 'Ninjas', 'Aluren', 'Echo Storm', 'Selesnya Depths', 'Enchantress', 'Pox', 'Esper Mentor', 'High Tide', '4c Black', 'BUG Zenith', 'Oops', 'Simic Titan', 'Artifact Echo', 'Oko Chalice Midrange', 'Grixis Control', 'Bant Maverick', 'Landstill', 'Manaless Dredge', 'Esper Stoneblade', 'UW Stoneblade', 'Merfolk', 'BUG Stompy', 'Stax', 'Amulet', 'Esper Vial', 'Bomberman', 'Snow Food', 'Slivers', 'Mono Red Eldrazi', 'RUG Food Chain', 'Bant Snowblade', 'B', 'BUG Loam Pox', 'Oracle Thought Lash Combo', 'U/W Hexproof', 'Niv-Mizzet', 'Rogues', 'UBG', 'Misc.']
Loaded data:
	 n_archetypes 2
	 n_rounds 4
	 paired_scores [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]]
	 pairing_counts [[6, 66], [3, 49], [3, 18], [3, 39], [2, 19], [0, 3], [2, 30], [1, 20], [1, 10], [0, 0], [5, 20], [2, 17], [0, 15], [0, 4], [0, 0]]
	 record_counts [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]]
	 loss_counts [94, 626]
	 deck_counts [64, 363]
	 win_counts [269, 1466]
	 matchup_wins [[   0.    0.]
 [   0. 3310.]]
	 matchup_counts [[   0.    0.]
 [   0. 6598.]]
	 archetypes ['Breach', ['Misc.']]
	 obs_proportion [0.08284023668639054, 0.9171597633136095]
2020-03-09 08:09:45.755172: I tensorflow/core/platform/profile_utils/cpu_utils.cc:94] CPU Frequency: 3991395000 Hz
2020-03-09 08:09:45.757941: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x559b31d203b0 executing computations on platform Host. Devices:
2020-03-09 08:09:45.757985: I tensorflow/compiler/xla/service/service.cc:175]   StreamExecutor device (0): <undefined>, <undefined>
----Running MCMC----
/home/jhatfiel/miniconda3/lib/python3.7/site-packages/tensorflow_probability/python/mcmc/internal/util.py:494: UserWarning: `step_size` is not a `tf.Tensor`, Python number, or Numpy array. If this parameter is mutable (e.g., a `tf.Variable`), then the behavior implied by `store_parameters_in_results` will silently change on 2019-08-01. Please consult the docstring for `store_parameters_in_results` details and use `store_parameters_in_results=True` to silence this warning.
  param_name))
WARNING: Logging before flag parsing goes to stderr.
W0309 08:09:45.959298 140314661214016 deprecation.py:323] From /home/jhatfiel/src/mtg-tfp/generate.py:39: add_dispatch_support.<locals>.wrapper (from tensorflow.python.ops.array_ops) is deprecated and will be removed in a future version.
Instructions for updating:
Use tf.where in 2.0, which has the same broadcast rule as np.where
2020-03-09 08:09:52.305495: W tensorflow/compiler/jit/mark_for_compilation_pass.cc:1412] (One-time warning): Not using XLA:CPU for cluster because envvar TF_XLA_FLAGS=--tf_xla_cpu_global_jit was not set.  If you want XLA:CPU, either set that envvar, or use experimental_jit_scope to enable XLA:CPU.  To confirm that XLA is active, pass --vmodule=xla_compilation_cache=1 (as a proper command-line flag, not via TF_XLA_FLAGS) or set the envvar XLA_FLAGS=--xla_hlo_profile.
Acceptance rate: 0.7421583333333334
Final step size: 0.13490094244480133
M == 
	[[[0.5        0.61991525]
	  [0.38008335 0.5       ]]
	
	 [[0.5        0.6205151 ]
	  [0.3794844  0.5       ]]
	
	 [[0.5        0.6201083 ]
	  [0.37989274 0.5       ]]
	
	 [[0.5        0.62022173]
	  [0.3797763  0.5       ]]
	
	 [[0.5        0.6205413 ]
	  [0.37945953 0.5       ]]
	
	 [[0.5        0.62028795]
	  [0.37971196 0.5       ]]
	
	 [[0.5        0.6201537 ]
	  [0.37984583 0.5       ]]
	
	 [[0.5        0.6200072 ]
	  [0.37999198 0.5       ]]]
field==
	[[0.09279491 0.90720755]
	 [0.0928154  0.9071821 ]
	 [0.09289889 0.9070975 ]
	 [0.09290032 0.90709835]
	 [0.09284883 0.9071504 ]
	 [0.09300525 0.9069955 ]
	 [0.09275663 0.90724194]
	 [0.09292398 0.9070764 ]]
wait time==
	[[19.962296]
	 [18.737402]
	 [19.985077]
	 [19.882633]
	 [18.412754]
	 [18.256763]
	 [19.549534]
	 [18.814426]]
score_matrix=
	[[3.2111487e-01 4.6755984e-02 1.9382945e-03 2.6948305e-04 9.3514383e-05
	  5.9443868e-05 4.5719611e-05 3.6385005e-05 2.3225026e-05]
	 [2.6030490e-01 4.1256297e-01 2.3549296e-02 1.5075261e-03 3.9611946e-04
	  2.4174979e-04 1.9066577e-04 1.6655990e-04 1.3851047e-04]
	 [2.6769567e-01 3.7404788e-01 7.4135882e-01 3.4228731e-02 4.0063504e-03
	  2.1558644e-03 1.6647857e-03 1.5065571e-03 1.3750090e-03]
	 [9.5016159e-02 1.0827841e-01 1.6483797e-01 8.2208490e-01 2.7668780e-02
	  1.0552658e-02 7.3681716e-03 6.6480110e-03 6.2841917e-03]
	 [4.5562528e-02 4.8511028e-02 5.8149051e-02 1.2835620e-01 9.3529546e-01
	  1.2835620e-01 5.8149051e-02 4.8511028e-02 4.5562528e-02]
	 [6.2841917e-03 6.6480110e-03 7.3681716e-03 1.0552658e-02 2.7668780e-02
	  8.2208490e-01 1.6483797e-01 1.0827841e-01 9.5016159e-02]
	 [1.3750090e-03 1.5065571e-03 1.6647857e-03 2.1558644e-03 4.0063504e-03
	  3.4228731e-02 7.4135882e-01 3.7404788e-01 2.6769567e-01]
	 [1.3851047e-04 1.6655990e-04 1.9066577e-04 2.4174979e-04 3.9611946e-04
	  1.5075261e-03 2.3549296e-02 4.1256297e-01 2.6030490e-01]
	 [2.3225026e-05 3.6385005e-05 4.5719611e-05 5.9443868e-05 9.3514383e-05
	  2.6948305e-04 1.9382945e-03 4.6755984e-02 3.2111487e-01]]
Average score pairings:
	P(opp.score=-4.0 | pl.score=-4.0) == 32.11148679256439%
	P(opp.score=-3.0 | pl.score=-4.0) == 26.030489802360535%
	P(opp.score=-2.0 | pl.score=-4.0) == 26.769566535949707%
	P(opp.score=-1.0 | pl.score=-4.0) == 9.501615911722183%
	P(opp.score=0.0 | pl.score=-4.0) == 4.556252807378769%
	P(opp.score=1.0 | pl.score=-4.0) == 0.6284191738814116%
	P(opp.score=2.0 | pl.score=-4.0) == 0.13750089565292%
	P(opp.score=3.0 | pl.score=-4.0) == 0.01385104696964845%
	P(opp.score=4.0 | pl.score=-4.0) == 0.0023225025870488025%
	P(opp.score=-4.0 | pl.score=-3.0) == 4.675598442554474%
	P(opp.score=-3.0 | pl.score=-3.0) == 41.25629663467407%
	P(opp.score=-2.0 | pl.score=-3.0) == 37.40478754043579%
	P(opp.score=-1.0 | pl.score=-3.0) == 10.827840864658356%
	P(opp.score=0.0 | pl.score=-3.0) == 4.851102828979492%
	P(opp.score=1.0 | pl.score=-3.0) == 0.6648011039942503%
	P(opp.score=2.0 | pl.score=-3.0) == 0.15065571060404181%
	P(opp.score=3.0 | pl.score=-3.0) == 0.01665598974796012%
	P(opp.score=4.0 | pl.score=-3.0) == 0.00363850049325265%
	P(opp.score=-4.0 | pl.score=-2.0) == 0.19382945029065013%
	P(opp.score=-3.0 | pl.score=-2.0) == 2.354929596185684%
	P(opp.score=-2.0 | pl.score=-2.0) == 74.13588166236877%
	P(opp.score=-1.0 | pl.score=-2.0) == 16.483797132968903%
	P(opp.score=0.0 | pl.score=-2.0) == 5.814905092120171%
	P(opp.score=1.0 | pl.score=-2.0) == 0.7368171587586403%
	P(opp.score=2.0 | pl.score=-2.0) == 0.16647856682538986%
	P(opp.score=3.0 | pl.score=-2.0) == 0.01906657707877457%
	P(opp.score=4.0 | pl.score=-2.0) == 0.004571961108013056%
	P(opp.score=-4.0 | pl.score=-1.0) == 0.0269483047304675%
	P(opp.score=-3.0 | pl.score=-1.0) == 0.15075261471793056%
	P(opp.score=-2.0 | pl.score=-1.0) == 3.422873094677925%
	P(opp.score=-1.0 | pl.score=-1.0) == 82.2084903717041%
	P(opp.score=0.0 | pl.score=-1.0) == 12.83562034368515%
	P(opp.score=1.0 | pl.score=-1.0) == 1.0552657768130302%
	P(opp.score=2.0 | pl.score=-1.0) == 0.21558643784374%
	P(opp.score=3.0 | pl.score=-1.0) == 0.0241749788983725%
	P(opp.score=4.0 | pl.score=-1.0) == 0.005944386793999001%
	P(opp.score=-4.0 | pl.score=0.0) == 0.009351438347948715%
	P(opp.score=-3.0 | pl.score=0.0) == 0.03961194597650319%
	P(opp.score=-2.0 | pl.score=0.0) == 0.4006350412964821%
	P(opp.score=-1.0 | pl.score=0.0) == 2.7668779715895653%
	P(opp.score=0.0 | pl.score=0.0) == 93.52954626083374%
	P(opp.score=1.0 | pl.score=0.0) == 2.7668779715895653%
	P(opp.score=2.0 | pl.score=0.0) == 0.4006350412964821%
	P(opp.score=3.0 | pl.score=0.0) == 0.03961194597650319%
	P(opp.score=4.0 | pl.score=0.0) == 0.009351438347948715%
	P(opp.score=-4.0 | pl.score=1.0) == 0.005944386793999001%
	P(opp.score=-3.0 | pl.score=1.0) == 0.0241749788983725%
	P(opp.score=-2.0 | pl.score=1.0) == 0.21558643784374%
	P(opp.score=-1.0 | pl.score=1.0) == 1.0552657768130302%
	P(opp.score=0.0 | pl.score=1.0) == 12.83562034368515%
	P(opp.score=1.0 | pl.score=1.0) == 82.2084903717041%
	P(opp.score=2.0 | pl.score=1.0) == 3.422873094677925%
	P(opp.score=3.0 | pl.score=1.0) == 0.15075261471793056%
	P(opp.score=4.0 | pl.score=1.0) == 0.0269483047304675%
	P(opp.score=-4.0 | pl.score=2.0) == 0.004571961108013056%
	P(opp.score=-3.0 | pl.score=2.0) == 0.01906657707877457%
	P(opp.score=-2.0 | pl.score=2.0) == 0.16647856682538986%
	P(opp.score=-1.0 | pl.score=2.0) == 0.7368171587586403%
	P(opp.score=0.0 | pl.score=2.0) == 5.814905092120171%
	P(opp.score=1.0 | pl.score=2.0) == 16.483797132968903%
	P(opp.score=2.0 | pl.score=2.0) == 74.13588166236877%
	P(opp.score=3.0 | pl.score=2.0) == 2.354929596185684%
	P(opp.score=4.0 | pl.score=2.0) == 0.19382945029065013%
	P(opp.score=-4.0 | pl.score=3.0) == 0.00363850049325265%
	P(opp.score=-3.0 | pl.score=3.0) == 0.01665598974796012%
	P(opp.score=-2.0 | pl.score=3.0) == 0.15065571060404181%
	P(opp.score=-1.0 | pl.score=3.0) == 0.6648011039942503%
	P(opp.score=0.0 | pl.score=3.0) == 4.851102828979492%
	P(opp.score=1.0 | pl.score=3.0) == 10.827840864658356%
	P(opp.score=2.0 | pl.score=3.0) == 37.40478754043579%
	P(opp.score=3.0 | pl.score=3.0) == 41.25629663467407%
	P(opp.score=4.0 | pl.score=3.0) == 4.675598442554474%
	P(opp.score=-4.0 | pl.score=4.0) == 0.0023225025870488025%
	P(opp.score=-3.0 | pl.score=4.0) == 0.01385104696964845%
	P(opp.score=-2.0 | pl.score=4.0) == 0.13750089565292%
	P(opp.score=-1.0 | pl.score=4.0) == 0.6284191738814116%
	P(opp.score=0.0 | pl.score=4.0) == 4.556252807378769%
	P(opp.score=1.0 | pl.score=4.0) == 9.501615911722183%
	P(opp.score=2.0 | pl.score=4.0) == 26.769566535949707%
	P(opp.score=3.0 | pl.score=4.0) == 26.030489802360535%
	P(opp.score=4.0 | pl.score=4.0) == 32.11148679256439%
Field distribution stats:
	Archetype                 Mean   Std.Dev        5%       25%       50%       75%       95%
	Breach                0.092868  0.011033  0.075793  0.085178  0.092274  0.099899  0.111965
Traceback (most recent call last):
  File "./matches.py", line 473, in <module>
    process_results(sess, results, labels, burn_in, arguments.output_dir, False, plot_dir=arguments.plot_dir)
  File "./matches.py", line 161, in process_results
    summarize_run(results, labels, burn_in)
  File "./matches.py", line 93, in summarize_run
    print(f"\t{archetype_labels[i]:20}{stats}")
TypeError: unsupported format string passed to list.__format__
]777;notify;Command completed;./matches.py -l 2020-02/combined_league.csv -r 2020-02/mtgo_records.csv -m 2020-02/gp_bologna_matchups.csv -s 2020-02/substitutions.csv -d Breach -n 25000 -b 5000 -c 8 -i 2 -o 2020-02/prebr/singleton-breach]0;jhatfiel@centos:~/src/mtg-tfp]7;file://centos/home/jhatfiel/src/mtg-tfp(base) [jhatfiel@centos mtg-tfp]$ ./matches.py -l 2020-02/combined_league.csv -r 2020-02/mtgo_records.csv -m 2020-02/gp_bologna_matchups.csv -s 2020-02/substitutions.csv -d Breach -n 25000 -b 5000 -c 8 -i 2 -o 2020-02/prebr/singleton-breacch
/home/jhatfiel/miniconda3/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:516: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint8 = np.dtype([("qint8", np.int8, 1)])
/home/jhatfiel/miniconda3/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:517: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_quint8 = np.dtype([("quint8", np.uint8, 1)])
/home/jhatfiel/miniconda3/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:518: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint16 = np.dtype([("qint16", np.int16, 1)])
/home/jhatfiel/miniconda3/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:519: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_quint16 = np.dtype([("quint16", np.uint16, 1)])
/home/jhatfiel/miniconda3/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:520: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint32 = np.dtype([("qint32", np.int32, 1)])
/home/jhatfiel/miniconda3/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:525: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  np_resource = np.dtype([("resource", np.ubyte, 1)])
/home/jhatfiel/miniconda3/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:541: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint8 = np.dtype([("qint8", np.int8, 1)])
/home/jhatfiel/miniconda3/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:542: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_quint8 = np.dtype([("quint8", np.uint8, 1)])
/home/jhatfiel/miniconda3/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:543: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint16 = np.dtype([("qint16", np.int16, 1)])
/home/jhatfiel/miniconda3/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:544: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_quint16 = np.dtype([("quint16", np.uint16, 1)])
/home/jhatfiel/miniconda3/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:545: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint32 = np.dtype([("qint32", np.int32, 1)])
/home/jhatfiel/miniconda3/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:550: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  np_resource = np.dtype([("resource", np.ubyte, 1)])
['Delver', 'Breach', 'Control', 'Cloudpost', 'Show and Tell', 'Storm', 'Chalice Stompy', 'Death and Taxes', 'Reanimator', 'Elves', '4C Loam', 'Lands', "Death's Shadow", 'Maverick', 'Mono-Red Prison', 'Hogaak', 'Depths', 'Dredge', 'Infect', 'Esper Hatebears', 'Goblins', 'BUG Zenith Oko', 'BUG Doomsday', 'Stryfo Pile', 'Painter', 'Urza ThopterSword', 'Burn', 'BUG', 'Belcher', 'Turbo Depths', 'BUG Control', 'Humans', 'Jund', 'Ninjas', 'Aluren', 'Echo Storm', 'Selesnya Depths', 'Enchantress', 'Pox', 'Esper Mentor', 'High Tide', '4c Black', 'BUG Zenith', 'Oops', 'Simic Titan', 'Artifact Echo', 'Oko Chalice Midrange', 'Grixis Control', 'Bant Maverick', 'Landstill', 'Manaless Dredge', 'Esper Stoneblade', 'UW Stoneblade', 'Merfolk', 'BUG Stompy', 'Stax', 'Amulet', 'Esper Vial', 'Bomberman', 'Snow Food', 'Slivers', 'Mono Red Eldrazi', 'RUG Food Chain', 'Bant Snowblade', 'B', 'BUG Loam Pox', 'Oracle Thought Lash Combo', 'U/W Hexproof', 'Niv-Mizzet', 'Rogues', 'UBG', 'Misc.']
Loaded data:
	 n_archetypes 2
	 n_rounds 4
	 paired_scores [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]]
	 pairing_counts [[6, 66], [3, 49], [3, 18], [3, 39], [2, 19], [0, 3], [2, 30], [1, 20], [1, 10], [0, 0], [5, 20], [2, 17], [0, 15], [0, 4], [0, 0]]
	 record_counts [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]]
	 win_counts [269, 1466]
	 deck_counts [64, 363]
	 loss_counts [94, 626]
	 matchup_counts [[   0.    0.]
 [   0. 6598.]]
	 matchup_wins [[   0.    0.]
 [   0. 3310.]]
	 archetypes ['Breach', 'Misc.']
	 obs_proportion [0.08284023668639054, 0.9171597633136095]
2020-03-09 09:02:39.730760: I tensorflow/core/platform/profile_utils/cpu_utils.cc:94] CPU Frequency: 3991395000 Hz
2020-03-09 09:02:39.748131: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x55f57eab6df0 executing computations on platform Host. Devices:
2020-03-09 09:02:39.748175: I tensorflow/compiler/xla/service/service.cc:175]   StreamExecutor device (0): <undefined>, <undefined>
----Running MCMC----
/home/jhatfiel/miniconda3/lib/python3.7/site-packages/tensorflow_probability/python/mcmc/internal/util.py:494: UserWarning: `step_size` is not a `tf.Tensor`, Python number, or Numpy array. If this parameter is mutable (e.g., a `tf.Variable`), then the behavior implied by `store_parameters_in_results` will silently change on 2019-08-01. Please consult the docstring for `store_parameters_in_results` details and use `store_parameters_in_results=True` to silence this warning.
  param_name))
WARNING: Logging before flag parsing goes to stderr.
W0309 09:02:39.970514 139771241191232 deprecation.py:323] From /home/jhatfiel/src/mtg-tfp/generate.py:39: add_dispatch_support.<locals>.wrapper (from tensorflow.python.ops.array_ops) is deprecated and will be removed in a future version.
Instructions for updating:
Use tf.where in 2.0, which has the same broadcast rule as np.where
2020-03-09 09:02:46.290772: W tensorflow/compiler/jit/mark_for_compilation_pass.cc:1412] (One-time warning): Not using XLA:CPU for cluster because envvar TF_XLA_FLAGS=--tf_xla_cpu_global_jit was not set.  If you want XLA:CPU, either set that envvar, or use experimental_jit_scope to enable XLA:CPU.  To confirm that XLA is active, pass --vmodule=xla_compilation_cache=1 (as a proper command-line flag, not via TF_XLA_FLAGS) or set the envvar XLA_FLAGS=--xla_hlo_profile.
Acceptance rate: 0.7827875
Final step size: 0.12708280980587006
M == 
	[[[0.5        0.62004095]
	  [0.3799585  0.5       ]]
	
	 [[0.5        0.6201587 ]
	  [0.37984046 0.5       ]]
	
	 [[0.5        0.6202787 ]
	  [0.37972218 0.5       ]]
	
	 [[0.5        0.6201266 ]
	  [0.37987196 0.5       ]]
	
	 [[0.5        0.6206717 ]
	  [0.37932917 0.5       ]]
	
	 [[0.5        0.62020135]
	  [0.37979823 0.5       ]]
	
	 [[0.5        0.6198838 ]
	  [0.38011727 0.5       ]]
	
	 [[0.5        0.6196325 ]
	  [0.3803673  0.5       ]]]
field==
	[[0.0927017  0.9072969 ]
	 [0.09295052 0.907048  ]
	 [0.09267995 0.90732056]
	 [0.09286299 0.90713495]
	 [0.09269926 0.90729916]
	 [0.09276007 0.90724033]
	 [0.0928437  0.90715563]
	 [0.09300865 0.90699106]]
wait time==
	[[20.180647]
	 [17.814323]
	 [20.976065]
	 [17.968384]
	 [18.618282]
	 [17.286827]
	 [18.703413]
	 [18.836493]]
score_matrix=
	[[3.2189515e-01 4.7014210e-02 1.8753270e-03 2.4796932e-04 8.4772546e-05
	  5.3707168e-05 4.1282361e-05 3.2881082e-05 2.1021317e-05]
	 [2.6189980e-01 4.1369703e-01 2.3487540e-02 1.4221015e-03 3.6245136e-04
	  2.1980723e-04 1.7307969e-04 1.5126042e-04 1.2594723e-04]
	 [2.6884332e-01 3.7611368e-01 7.4455512e-01 3.3728927e-02 3.7381214e-03
	  1.9837546e-03 1.5257772e-03 1.3803606e-03 1.2609377e-03]
	 [9.4042510e-02 1.0738015e-01 1.6440588e-01 8.2544512e-01 2.6805259e-02
	  9.9545829e-03 6.8836752e-03 6.1997343e-03 5.8615366e-03]
	 [4.3830492e-02 4.6715580e-02 5.6259539e-02 1.2648402e-01 9.3772274e-01
	  1.2648402e-01 5.6259539e-02 4.6715580e-02 4.3830492e-02]
	 [5.8615366e-03 6.1997343e-03 6.8836752e-03 9.9545829e-03 2.6805259e-02
	  8.2544512e-01 1.6440588e-01 1.0738015e-01 9.4042510e-02]
	 [1.2609377e-03 1.3803606e-03 1.5257772e-03 1.9837546e-03 3.7381214e-03
	  3.3728927e-02 7.4455512e-01 3.7611368e-01 2.6884332e-01]
	 [1.2594723e-04 1.5126042e-04 1.7307969e-04 2.1980723e-04 3.6245136e-04
	  1.4221015e-03 2.3487540e-02 4.1369703e-01 2.6189980e-01]
	 [2.1021317e-05 3.2881082e-05 4.1282361e-05 5.3707168e-05 8.4772546e-05
	  2.4796932e-04 1.8753270e-03 4.7014210e-02 3.2189515e-01]]
Average score pairings:
	P(opp.score=-4.0 | pl.score=-4.0) == 32.189515233039856%
	P(opp.score=-3.0 | pl.score=-4.0) == 26.189979910850525%
	P(opp.score=-2.0 | pl.score=-4.0) == 26.884332299232483%
	P(opp.score=-1.0 | pl.score=-4.0) == 9.404250979423523%
	P(opp.score=0.0 | pl.score=-4.0) == 4.383049160242081%
	P(opp.score=1.0 | pl.score=-4.0) == 0.5861536599695683%
	P(opp.score=2.0 | pl.score=-4.0) == 0.12609376572072506%
	P(opp.score=3.0 | pl.score=-4.0) == 0.01259472337551415%
	P(opp.score=4.0 | pl.score=-4.0) == 0.0021021316570113413%
	P(opp.score=-4.0 | pl.score=-3.0) == 4.701421037316322%
	P(opp.score=-3.0 | pl.score=-3.0) == 41.36970341205597%
	P(opp.score=-2.0 | pl.score=-3.0) == 37.61136829853058%
	P(opp.score=-1.0 | pl.score=-3.0) == 10.738015174865723%
	P(opp.score=0.0 | pl.score=-3.0) == 4.671557992696762%
	P(opp.score=1.0 | pl.score=-3.0) == 0.6199734285473824%
	P(opp.score=2.0 | pl.score=-3.0) == 0.13803605688735843%
	P(opp.score=3.0 | pl.score=-3.0) == 0.015126042126212269%
	P(opp.score=4.0 | pl.score=-3.0) == 0.003288108200649731%
	P(opp.score=-4.0 | pl.score=-2.0) == 0.1875326968729496%
	P(opp.score=-3.0 | pl.score=-2.0) == 2.348753996193409%
	P(opp.score=-2.0 | pl.score=-2.0) == 74.4555115699768%
	P(opp.score=-1.0 | pl.score=-2.0) == 16.440588235855103%
	P(opp.score=0.0 | pl.score=-2.0) == 5.625953897833824%
	P(opp.score=1.0 | pl.score=-2.0) == 0.688367523252964%
	P(opp.score=2.0 | pl.score=-2.0) == 0.15257771592587233%
	P(opp.score=3.0 | pl.score=-2.0) == 0.0173079693922773%
	P(opp.score=4.0 | pl.score=-2.0) == 0.004128236105316319%
	P(opp.score=-4.0 | pl.score=-1.0) == 0.02479693212080747%
	P(opp.score=-3.0 | pl.score=-1.0) == 0.14221015153452754%
	P(opp.score=-2.0 | pl.score=-1.0) == 3.372892737388611%
	P(opp.score=-1.0 | pl.score=-1.0) == 82.54451155662537%
	P(opp.score=0.0 | pl.score=-1.0) == 12.648402154445648%
	P(opp.score=1.0 | pl.score=-1.0) == 0.9954582899808884%
	P(opp.score=2.0 | pl.score=-1.0) == 0.19837545696645975%
	P(opp.score=3.0 | pl.score=-1.0) == 0.021980723249725997%
	P(opp.score=4.0 | pl.score=-1.0) == 0.005370716826291755%
	P(opp.score=-4.0 | pl.score=0.0) == 0.00847725459607318%
	P(opp.score=-3.0 | pl.score=0.0) == 0.036245136288926005%
	P(opp.score=-2.0 | pl.score=0.0) == 0.3738121362403035%
	P(opp.score=-1.0 | pl.score=0.0) == 2.680525928735733%
	P(opp.score=0.0 | pl.score=0.0) == 93.77227425575256%
	P(opp.score=1.0 | pl.score=0.0) == 2.680525928735733%
	P(opp.score=2.0 | pl.score=0.0) == 0.3738121362403035%
	P(opp.score=3.0 | pl.score=0.0) == 0.036245136288926005%
	P(opp.score=4.0 | pl.score=0.0) == 0.00847725459607318%
	P(opp.score=-4.0 | pl.score=1.0) == 0.005370716826291755%
	P(opp.score=-3.0 | pl.score=1.0) == 0.021980723249725997%
	P(opp.score=-2.0 | pl.score=1.0) == 0.19837545696645975%
	P(opp.score=-1.0 | pl.score=1.0) == 0.9954582899808884%
	P(opp.score=0.0 | pl.score=1.0) == 12.648402154445648%
	P(opp.score=1.0 | pl.score=1.0) == 82.54451155662537%
	P(opp.score=2.0 | pl.score=1.0) == 3.372892737388611%
	P(opp.score=3.0 | pl.score=1.0) == 0.14221015153452754%
	P(opp.score=4.0 | pl.score=1.0) == 0.02479693212080747%
	P(opp.score=-4.0 | pl.score=2.0) == 0.004128236105316319%
	P(opp.score=-3.0 | pl.score=2.0) == 0.0173079693922773%
	P(opp.score=-2.0 | pl.score=2.0) == 0.15257771592587233%
	P(opp.score=-1.0 | pl.score=2.0) == 0.688367523252964%
	P(opp.score=0.0 | pl.score=2.0) == 5.625953897833824%
	P(opp.score=1.0 | pl.score=2.0) == 16.440588235855103%
	P(opp.score=2.0 | pl.score=2.0) == 74.4555115699768%
	P(opp.score=3.0 | pl.score=2.0) == 2.348753996193409%
	P(opp.score=4.0 | pl.score=2.0) == 0.1875326968729496%
	P(opp.score=-4.0 | pl.score=3.0) == 0.003288108200649731%
	P(opp.score=-3.0 | pl.score=3.0) == 0.015126042126212269%
	P(opp.score=-2.0 | pl.score=3.0) == 0.13803605688735843%
	P(opp.score=-1.0 | pl.score=3.0) == 0.6199734285473824%
	P(opp.score=0.0 | pl.score=3.0) == 4.671557992696762%
	P(opp.score=1.0 | pl.score=3.0) == 10.738015174865723%
	P(opp.score=2.0 | pl.score=3.0) == 37.61136829853058%
	P(opp.score=3.0 | pl.score=3.0) == 41.36970341205597%
	P(opp.score=4.0 | pl.score=3.0) == 4.701421037316322%
	P(opp.score=-4.0 | pl.score=4.0) == 0.0021021316570113413%
	P(opp.score=-3.0 | pl.score=4.0) == 0.01259472337551415%
	P(opp.score=-2.0 | pl.score=4.0) == 0.12609376572072506%
	P(opp.score=-1.0 | pl.score=4.0) == 0.5861536599695683%
	P(opp.score=0.0 | pl.score=4.0) == 4.383049160242081%
	P(opp.score=1.0 | pl.score=4.0) == 9.404250979423523%
	P(opp.score=2.0 | pl.score=4.0) == 26.884332299232483%
	P(opp.score=3.0 | pl.score=4.0) == 26.189979910850525%
	P(opp.score=4.0 | pl.score=4.0) == 32.189515233039856%
Field distribution stats:
	Archetype                 Mean   Std.Dev        5%       25%       50%       75%       95%
	Breach                0.092814  0.011049  0.075803  0.085088  0.092201  0.099851  0.111975
	Misc.                 0.907193  0.011049  0.888025  0.900149  0.907799  0.914913  0.924197
EV stats:
	Archetype                 Mean   Std.Dev        5%       25%       50%       75%       95%
	Breach                0.609178  0.030430  0.558355  0.588841  0.609536  0.630011  0.658538
	Misc.                 0.489093  0.002628  0.484836  0.487291  0.488987  0.490738  0.493459
Computed from 200000 total samples.
]777;notify;Command completed;./matches.py -l 2020-02/combined_league.csv -r 2020-02/mtgo_records.csv -m 2020-02/gp_bologna_matchups.csv -s 2020-02/substitutions.csv -d Breach -n 25000 -b 5000 -c 8 -i 2 -o 2020-02/prebr/singleton-breach]0;jhatfiel@centos:~/src/mtg-tfp]7;file://centos/home/jhatfiel/src/mtg-tfp(base) [jhatfiel@centos mtg-tfp]$ exit

Script done on 2020-03-09 09:18:57-04:00
